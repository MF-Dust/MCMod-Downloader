

name: Build Executable with Nuitka

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      # === MODIFIED STEP ===
      - name: Compile with Nuitka
        run: |
          # The command is corrected here.
          # We replaced the non-existent '--plugin-enable=rich' with '--include-package=rich'.
          # We also removed the unnecessary '--plugin-enable=requests'.
          nuitka_command="python -m nuitka --standalone --onefile --include-package=rich --output-dir=dist"

          # Add a Windows-specific flag to disable the background console.
          if [ "$RUNNER_OS" == "Windows" ]; then
            nuitka_command+=" --windows-disable-console"
          fi
          
          # Add the entry point script and execute the command.
          nuitka_command+=" main.py"
          echo "Running command: $nuitka_command"
          $nuitka_command

      - name: Rename Artifact
        shell: bash
        run: |
          cd dist
          if [ "$RUNNER_OS" == "Windows" ]; then
            mv main.exe Minecraft-Mod-Downloader-Windows.exe
            echo "ASSET_NAME=Minecraft-Mod-Downloader-Windows.exe" >> $GITHUB_ENV
            echo "ASSET_PATH=dist/Minecraft-Mod-Downloader-Windows.exe" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "Linux" ]; then
            mv main.bin Minecraft-Mod-Downloader-Linux
            echo "ASSET_NAME=Minecraft-Mod-Downloader-Linux" >> $GITHUB_ENV
            echo "ASSET_PATH=dist/Minecraft-Mod-Downloader-Linux" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            mv main.bin Minecraft-Mod-Downloader-macOS
            echo "ASSET_NAME=Minecraft-Mod-Downloader-macOS" >> $GITHUB_ENV
            echo "ASSET_PATH=dist/Minecraft-Mod-Downloader-macOS" >> $GITHUB_ENV
          fi
          cd ..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream
